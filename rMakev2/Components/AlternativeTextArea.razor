@using Blazorise.RichTextEdit
@using rMakev2.Models
@using rMakev2.ViewModel
@inject RmakeViewModel vm;
@inject IJSRuntime jsr;

<RichTextEdit @ref="richTextEditRef"
              Theme="RichTextEditTheme.Snow"              
              PlaceHolder="Start writting"           
              SubmitOnEnter="false" 
              @onkeydown="OnKeyPress"             
              ToolbarPosition="Blazorise.Placement.Top">
              
    <Editor>
        @((MarkupString)Content)

    </Editor>
    <Toolbar>
        <RichTextEditToolbarGroup>
            <RichTextEditToolbarButton Action="RichTextEditAction.Bold" />
            <RichTextEditToolbarButton Action="RichTextEditAction.Italic" />
            <RichTextEditToolbarButton Action="RichTextEditAction.Strike" />
            <RichTextEditToolbarButton Action="RichTextEditAction.Underline" />
            <RichTextEditToolbarButton Action="RichTextEditAction.CodeBlock" />
            <RichTextEditToolbarSelect Action="RichTextEditAction.Align">

                <RichTextEditToolbarSelectItem Value="center" />
                <RichTextEditToolbarSelectItem Value="right" />
                <RichTextEditToolbarSelectItem Value="justify" />
                <RichTextEditToolbarSelectItem Selected />
            </RichTextEditToolbarSelect>

            <RichTextEditToolbarSelect Action="RichTextEditAction.Size">
                <RichTextEditToolbarSelectItem Value="small" />
                <RichTextEditToolbarSelectItem Selected />
                <RichTextEditToolbarSelectItem Value="large" />
                <RichTextEditToolbarSelectItem Value="huge">Very Big</RichTextEditToolbarSelectItem>
            </RichTextEditToolbarSelect>
            <RichTextEditToolbarButton Action="RichTextEditAction.List" Value="ordered" />
            <RichTextEditToolbarButton Action="RichTextEditAction.List" Value="bullet" />
        </RichTextEditToolbarGroup>
        <!-- Custom toolbar content -->
        <RichTextEditToolbarGroup Float="Blazorise.Float.End">
        </RichTextEditToolbarGroup>
    </Toolbar>
</RichTextEdit>

@code {


    protected RichTextEdit? richTextEditRef;
    protected bool readOnly = false;
    protected string? contentAsHtml;
    protected string AreaOrderId;

    [Parameter]
    public string Content {get; set;}
    [Parameter]
    public Element Element{ get; set; }

    async Task OnKeyPress()
    {

        Element.Content = await richTextEditRef.GetHtmlAsync();

    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
       
        return base.OnAfterRenderAsync(firstRender);
    }


    protected override Task OnInitializedAsync()
    {
        
        return base.OnInitializedAsync();
    }


}
