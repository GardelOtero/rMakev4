@page "/"
@using System.ComponentModel.DataAnnotations;
@using rMakev2.ViewModel;
@using rMakev2.Services;
@inject RmakeViewModel vm;
@inject ProjectViewModel PVm;
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavigationManager
@inject IToastService toastService

<style>
    

    body {
        background-image: url('../wwwroot/images/MicrosoftTeams-image.png');
        background-repeat: no-repeat;
        background-attachment: fixed;
        background-size: cover;
    }
</style>

<div class="container-fluid" >

    <div class="container-fluid" style=" z-index:1; position: absolute;">

        <div id="bg-wrap" style="opacity: 0.2; z-index:1; position: relative;">
            <svg viewBox="0 0 100 50" preserveAspectRatio="xMidYMid slice">
                <defs>
                    <radialGradient id="Gradient1" cx="50%" cy="50%" fx="0.441602%" fy="50%" r=".5"><animate attributeName="fx" dur="34s" values="0%;3%;0%" repeatCount="indefinite"></animate><stop offset="0%" stop-color="rgba(255, 0, 255, 1)"></stop><stop offset="100%" stop-color="rgba(255, 0, 255, 0)"></stop></radialGradient>
                    <radialGradient id="Gradient2" cx="50%" cy="50%" fx="2.68147%" fy="50%" r=".5"><animate attributeName="fx" dur="23.5s" values="0%;3%;0%" repeatCount="indefinite"></animate><stop offset="0%" stop-color="rgba(255, 255, 0, 1)"></stop><stop offset="100%" stop-color="rgba(255, 255, 0, 0)"></stop></radialGradient>
                    <radialGradient id="Gradient3" cx="50%" cy="50%" fx="0.836536%" fy="50%" r=".5"><animate attributeName="fx" dur="21.5s" values="0%;3%;0%" repeatCount="indefinite"></animate><stop offset="0%" stop-color="rgba(0, 255, 255, 1)"></stop><stop offset="100%" stop-color="rgba(0, 255, 255, 0)"></stop></radialGradient>
                    <radialGradient id="Gradient4" cx="50%" cy="50%" fx="4.56417%" fy="50%" r=".5"><animate attributeName="fx" dur="23s" values="0%;5%;0%" repeatCount="indefinite"></animate><stop offset="0%" stop-color="rgba(0, 255, 0, 1)"></stop><stop offset="100%" stop-color="rgba(0, 255, 0, 0)"></stop></radialGradient>
                    <radialGradient id="Gradient5" cx="50%" cy="50%" fx="2.65405%" fy="50%" r=".5"><animate attributeName="fx" dur="24.5s" values="0%;5%;0%" repeatCount="indefinite"></animate><stop offset="0%" stop-color="rgba(0,0,255, 1)"></stop><stop offset="100%" stop-color="rgba(0,0,255, 0)"></stop></radialGradient>
                    <radialGradient id="Gradient6" cx="50%" cy="50%" fx="0.981338%" fy="50%" r=".5"><animate attributeName="fx" dur="25.5s" values="0%;5%;0%" repeatCount="indefinite"></animate><stop offset="0%" stop-color="rgba(255,0,0, 1)"></stop><stop offset="100%" stop-color="rgba(255,0,0, 0)"></stop></radialGradient>
                </defs>
                <!--<rect x="0" y="0" width="100%" height="100%" fill="url(#Gradient4)">
                <animate attributeName="x" dur="20s" values="25%;0%;25%" repeatCount="indefinite" />
                <animate attributeName="y" dur="21s" values="0%;25%;0%" repeatCount="indefinite" />
                <animateTransform attributeName="transform" type="rotate" from="0 50 50" to="360 50 50" dur="17s" repeatCount="indefinite"/>
                </rect>
                <rect x="0" y="0" width="100%" height="100%" fill="url(#Gradient5)">
                <animate attributeName="x" dur="23s" values="0%;-25%;0%" repeatCount="indefinite" />
                <animate attributeName="y" dur="24s" values="25%;-25%;25%" repeatCount="indefinite" />
                <animateTransform attributeName="transform" type="rotate" from="0 50 50" to="360 50 50" dur="18s" repeatCount="indefinite"/>
                </rect>
                <rect x="0" y="0" width="100%" height="100%" fill="url(#Gradient6)">
                <animate attributeName="x" dur="25s" values="-25%;0%;-25%" repeatCount="indefinite" />
                <animate attributeName="y" dur="26s" values="0%;-25%;0%" repeatCount="indefinite" />
                <animateTransform attributeName="transform" type="rotate" from="360 50 50" to="0 50 50" dur="19s" repeatCount="indefinite"/>
                </rect>-->
                <rect x="13.744%" y="1.18473%" width="100%" height="100%" fill="url(#Gradient1)" transform="rotate(334.41 50 50)"><animate attributeName="x" dur="20s" values="25%;0%;25%" repeatCount="indefinite"></animate><animate attributeName="y" dur="21s" values="0%;25%;0%" repeatCount="indefinite"></animate><animateTransform attributeName="transform" type="rotate" from="0 50 50" to="360 50 50" dur="7s" repeatCount="indefinite"></animateTransform></rect>
                <rect x="-2.17916%" y="35.4267%" width="100%" height="100%" fill="url(#Gradient2)" transform="rotate(255.072 50 50)">
                    <animate attributeName="x" dur="23s" values="-25%;0%;-25%" repeatCount="indefinite"></animate><animate attributeName="y" dur="24s" values="0%;50%;0%" repeatCount="indefinite"></animate><animateTransform attributeName="transform" type="rotate" from="0 50 50" to="360 50 50" dur="12s" repeatCount="indefinite"></animateTransform>
                </rect>
                <rect x="9.00483%" y="14.5733%" width="100%" height="100%" fill="url(#Gradient3)" transform="rotate(139.903 50 50)">
                    <animate attributeName="x" dur="25s" values="0%;25%;0%" repeatCount="indefinite"></animate><animate attributeName="y" dur="12s" values="0%;25%;0%" repeatCount="indefinite"></animate><animateTransform attributeName="transform" type="rotate" from="360 50 50" to="0 50 50" dur="9s" repeatCount="indefinite"></animateTransform>
                </rect>
            </svg>
        </div>
    </div>


    <div class="container-fluid m-0" style="z-index:10; position: absolute;">


        <div class="d-flex justify-content-center" style="margin-top: 2%; margin-bottom: 2%; z-index:1;">

            <div class="index-header d-flex justify-content-left m-4" style="width:35%">
                <img class="logo" src="/svgs/rMake icon.svg" />
                <div class="left-line">
                    <h2 class="h-2-logo">rMake!</h2>
                    <h3 class="h-3-logo">For RADICAL companies.</h3>
                </div>
            </div>

        </div>
        <div class="d-flex justify-content-center">
            <div class="login-container" style="background-color: white;">
                <p>Create a new document</p>
                <br />
                <a @onclick="newSession" class="btn btn-start btn-lg">Start</a>
                <br />
                <div class="d-flex justify-content-center align-content-center">
                    <hr class="or-hr" />
                    <p class="or-index">or</p>
                    <hr class="or-hr" />
                </div>
                <br />
                <p style="margin-bottom: 0">Load an existing project</p>
                <br />
                <input Id="token" @bind="tokenstring" @onkeydown="Enter" class="form-control-index small" placeholder="example: 24256aG-A90n56D3-a722" autofocus />
                <br />
                <a Class="btn btn-start btn-lg" @onclick="navigate" @onkeydown="Enter">Load</a>
            </div>
        </div>

    </div>

</div>


@code {

    string tokenstring;
    string url;


    protected override Task OnInitializedAsync()
    {

        tokenstring = "";
        url = "/projects/" + tokenstring;



        return base.OnInitializedAsync();  
    }

    async void newSession()
    {
        await localStorage.ClearAsync();
        await PVm.InitializeProjects(vm.App);
        NavigationManager.NavigateTo("/projects/");
    }

    async void navigate()
    {
        if (tokenstring != "")
        {
            await localStorage.ClearAsync();
            await PVm.InitializeProjects(vm.App);

            NavigationManager.NavigateTo("/projects/" + tokenstring);
        }
    }

    public async void Enter(KeyboardEventArgs e)
    {
        if (tokenstring != "" && (e.Code == "Enter" || e.Code == "NumpadEnter"))
        {
            await localStorage.ClearAsync();
            await PVm.InitializeProjects(vm.App);

            NavigationManager.NavigateTo("/projects/" + tokenstring);
        }
    }
}