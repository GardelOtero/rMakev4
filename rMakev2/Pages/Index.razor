@page "/"
@using System.ComponentModel.DataAnnotations;
@using rMakev2.ViewModel;
@using rMakev2.Services;
@inject RmakeViewModel vm;
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavigationManager
@inject IToastService toastService

<div class="row center" style="width: 100vw; display:fixed">
    <div class="col-lg-6 vh-100 space" style="width: 55vw">
        <div class="index-header">
            <img class="logo" src="/svgs/rMake icon.svg" />
            <div class="left-line">
                <h2 class="h-2-logo">rMake!</h2>
                <h3 class="h-3-logo">For RADICAL companies.</h3>
            </div>
        </div>

        <div class="login-container">
            <p>Start a new journey here</p>
            <br />
            <a @onclick="newSession" class="btn btn-start btn-lg">Start from scratch</a>
            <br />
            <div class="d-flex justify-content-center align-content-center">
                <hr class="or-hr" />
                <p class="or-index">or</p>
                <hr class="or-hr" />
            </div>
            <br />
            <p>Use an existing token</p>
            <br />
            <input Id="token" @bind="tokenstring" @onkeydown="Enter" class="form-control-index small" placeholder="example: 24256aG-A90n56D3-a722" autofocus />
            <br />
            <a Class="btn btn-start btn-lg" @onclick="navigate" @onkeydown="Enter">Load</a>
        </div>

    </div>
</div>



@code {

    string tokenstring;
    string url;


    protected override Task OnInitializedAsync()
    {

        tokenstring = "";
        url = "/App/" + tokenstring;



        return base.OnInitializedAsync();
    }

    async void newSession()
    {
        await localStorage.ClearAsync();
        NavigationManager.NavigateTo("/App/", forceLoad: true);
    }

    async void navigate()
    {
        if (tokenstring != "")
        {
            await localStorage.ClearAsync();
            NavigationManager.NavigateTo("/App/" + tokenstring, forceLoad: true);
        }
    }

    public async void Enter(KeyboardEventArgs e)
    {
        if (tokenstring != "" && (e.Code == "Enter" || e.Code == "NumpadEnter"))
        {
            await localStorage.ClearAsync();
            NavigationManager.NavigateTo("/App/" + tokenstring, forceLoad: true);
        }
    }
}