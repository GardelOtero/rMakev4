@page "/"
@using System.ComponentModel.DataAnnotations;
@using rMakev2.ViewModel;
@using rMakev2.Services;
@inject RmakeViewModel vm;
@inject ProjectViewModel PVm;
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager NavigationManager
@inject IToastService toastService

<style>

    .index-header {
        color: #342e37;
        display: flex;
        align-items: center;
    }

    .login-container {
        box-sizing: border-box;
        padding: 50px 50px;
        max-width: 60%;
        /*box-shadow: rgba(17, 17, 26, 0.1) 0px 4px 16px, rgba(17, 17, 26, 0.1) 0px 8px 24px, rgba(17, 17, 26, 0.1) 0px 16px 56px;*/
        /*box-shadow: rgba(17, 17, 26, 0.25) 0px 8px 24px, rgba(17, 17, 26, 0.1) 0px 16px 56px, rgba(17, 17, 26, 0.1) 0px 24px 80px;*/ /*71*/
        box-shadow: rgb(38, 57, 77, 0.5) 0px 1px 13px -3px;
        border-radius: 10px;
        font-weight: 500;
        color: #342e37;
        width: 60%;
    }

    .btn-editor {
        color: #342e37;
        background-color: #F2EF25;
        border-color: none;
        border-radius: 8px;
        position: relative;
        text-align: center;
        transform: translateY(-58%);
        font-size: 14px;
        margin-top: 1px;
        transition: all 0.3s ease;
    }

    .btn-portfolio {
        color: #342e37;
        background-color: #D85AD0;
        border-color: none;
        border-radius: 8px;
        position: relative;
        text-align: center;
        transform: translateY(-58%);
        font-size: 14px;
        margin-top: 1px;
        transition: all 0.3s ease;
    }

    .btn-load {
        color: #342e37;
        background-color: #394BF8;
        border-color: none;
        border-radius: 8px;
        position: relative;
        text-align: center;
        transform: translateY(-58%);
        font-size: 14px;
        margin-top: 1px;
        transition: all 0.3s ease;
    }

        .btn-editor:hover, .btn-portfolio:hover, .btn-load:hover {
            background-color: #342e37;
            color: #fff;
        }

    .optionTitle {
        text-decoration: underline;
        font-weight: bold;
        font-size: medium;
    }

    .optionDesc {
        font-size: x-small;
    }

    

</style>


<div class="container-fluid d-flex flex-column" >

    <div>
        <div class="container mt-5">
            <img src="/svgs/rMake icon.svg" alt="logo"/>
        </div>


        <div class="container d-flex flex-row mt-5 justify-content-center h-100">

            <div class="container d-flex flex-column justify-content-center">
                <div>
                    <h2>Welcome to rMake!</h2>
                    <p>Your creative space</p>
                </div>
                <div>
                    <p>
                        Step into the world of rMake, where the art of
                        collaborative writing converges with the structure of
                        coding. Out platform reimagines the writing experience,
                        enabling seamless teamwork and innovative content
                        creation. Embrace a new way of composing together
                    </p>
                </div>
            </div>

            <div class="container d-flex align-items-center">
                <div class="login-container" style="background-color: white;">
                    <div class="d-flex flex-row justify-content-between align-items-center">
                        <div>
                            <p class="optionTitle">Start writing right away</p>
                            <p class="optionDesc">Hit "Start writing and let your words flow"</p>
                        </div>
                        <div>
                                <a @onclick="toEditor" class="btn btn-editor btn-lg">-></a>
                        </div>
                    </div>
                    <div class="d-flex flex-row justify-content-between align-items-center">
                        <div>
                            <p class="optionTitle">Create a new portfolio</p>
                            <p class="optionDesc">Create a new portfolio for your content</p>
                        </div>
                        <div>
                                <a @onclick="newSession" class="btn btn-portfolio btn-lg">-></a>
                        </div>
                    </div>
                    <div class="d-flex flex-column">
                        <div class="d-flex flex-row justify-content-between align-items-center">
                            <div>
                                <p class="optionTitle">Load an existent portfolio</p>
                                <p class="optionDesc">Revisit your treasury of words</p>
                            </div>
                            <div>
                                    <a @onclick="navigate" class="btn btn-load btn-lg">-></a>
                            </div>

                        </div>

                        <div>
                                <input Id="token" @bind="tokenstring" @onkeydown="Enter" class="form-control-index small" placeholder="Ex: 24256aG-A90n56D3-a722" autofocus />
                        </div>
                    </div>

                </div>
            </div>



        </div>


    </div>
   

</div>


@code {

    string tokenstring;
    string url;


    protected override Task OnInitializedAsync()
    {

        tokenstring = "";
        url = "/projects/" + tokenstring;



        return base.OnInitializedAsync();  
    }

    async void newSession()
    {
        await localStorage.ClearAsync();
        await PVm.InitializeProjects(vm.App);
        NavigationManager.NavigateTo("/projects/");
    }

    async void navigate()
    {
        if (tokenstring != "")
        {
            await localStorage.ClearAsync();
            await PVm.InitializeProjects(vm.App);

            NavigationManager.NavigateTo("/projects/" + tokenstring);
        }
    }

    async void toEditor()
    {
        await localStorage.ClearAsync();


        if (PVm.Portfolio == null)
        {
            await PVm.InitializeProjects(vm.App);
        }


        if (PVm.Portfolio.Projects.Count() <= 0)
        {
            PVm.Portfolio.AddProject();

            vm.Project = PVm.Portfolio.Projects.First();
        }

        await PVm.OnPropertyChanged();
        NavigationManager.NavigateTo("/app/" + vm.Project.GUID);

    }

    public async void Enter(KeyboardEventArgs e)
    {
        if (tokenstring != "" && (e.Code == "Enter" || e.Code == "NumpadEnter"))
        {
            await localStorage.ClearAsync();
            await PVm.InitializeProjects(vm.App);

            NavigationManager.NavigateTo("/projects/" + tokenstring);
        }
    }
}