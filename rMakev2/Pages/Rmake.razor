@page "/App"
@page "/App/{token}"
@using rMakev2.ViewModel;
@inject RmakeViewModel vm;
@inject IJSRuntime jsRuntime;
<PageTitle>rMake</PageTitle>
<div class="container-fluid">
    <div class="row mt-1" style="height:50px;">
        <div class="col-lg-2 col-md-5 col-sm-12">
            
               
           


        </div>
        <div class="col-lg-3 col-md-2 col-sm-12">
        </div>
        <div class="col-lg-2 col-md-2 col-sm-12">
            <select class="form-select " style="border:thin; border-style:solid; text-align:right; ">
                <option value="1" selected="selected" style="color:#000">Data: @vm.App.Id</option>
                <option value="1" style="color:#000">---</option>
                <option value="2" style="color:crimson;">Cerrar</option>
            </select>
        </div>

        <div class="col-lg-5">
            <div class="container">
                <div class="row">
                    <div class="col-lg-2  mt-1">
                        <a class="textMenu Underline" >Merge</a>
                    </div>

                    <div class="col-lg-3  mt-1">
                        <a class="textMenu Underline" @onclick="vm.ForkProject">Fork project</a>
                    </div>
                    <div class="col-lg-4  mt-1">
                        <a class="textMenu Underline" @onclick="vm.CloneDocument">Clone document</a>
                    </div>
                    <div class="col-lg-3  mt-1">

                        <a class="Underline" @onclick=" vm.ShowSaveModal"><img src="svgs/asset 1.svg" style="height: 20px; width:20px" /> </a>
                        <a  class="Underline"><img src="svgs/asset 2.svg" style="height: 20px; width:20px" /> </a>
                        <a class="Underline" @onclick=" vm.ShowPublishModal"><img src="svgs/asset 3.svg" style="height: 20px; width:20px" /> </a>

                    </div>
                </div>

            </div>
        </div>




    </div>
    <div class="row">
        <div class="col-lg-2 col-md-5 col-sm-12 ms-5">

            <p style="font-size:60px;">rMake!</p>
            <p style="font-size:9px;"> V2 </p>
            @*<p style="font-size:9px">@vm.Ui.BlockRTAFocus</p>*@



        </div>
       
    </div>


    <div class="row mt-4 mb-4" style="height:30px;">
        <div class="col-lg-2 col-md-5 col-sm-12">
        </div>
        <div class="col-lg-4 col-md-2 col-sm-12">
        </div>
        <div class="col-lg-3 col-md-5 col-sm-12">
            <div style="float:left; width:50%">

                @*s
                @if (@vm.Ui.EditProjectName == false)
                {
                <select @onchange="vm.EventSelectProject" class="form-select " style="border:none;">
                @foreach (var item in vm.App.Data.Projects)
                {
                if (item == vm.Ui.SelectedProject)
                {
                if (item.Name == "")
                {
                <option value="@item.Id" selected="selected">Project (@item.Id)</option>
                }
                else
                {

                <option value="@item.Id" selected="selected">@item.Name</option>
                }
                }
                else
                {
                if (item.Name == "")
                {
                <option value="@item.Id">Project (@item.Id)</option>
                }
                else
                {

                <option value="@item.Id">@item.Name</option>
                }
                }
                }
                </select>
                @if (vm.Ui.SelectedProject.ParentProjectId == null)
                {
                <div class="badge bg-secondary">Root project</div>
                }
                else
                {
                <div class="badge bg-secondary">@vm.Ui.SelectedProject.ParentProjectId</div>

                }
                }
                else
                {
                <input Id="ProjectName" @bind="@vm.Ui.SelectedProject.Name" @onblur="vm.UnBlockRTAFocus" @onkeydown="@vm.Enter" @bind:event="oninput" class="form-control-plaintext small" style=" font-size:24px; " placeholder="Project Name" autofocus @onclick="vm.BlockRTAFocus" />

                }
                *@



            </div>
            @*   <div style="float:left; width:15%">

            <button @onclick="vm.SwitchProjectName" class="btn btn-light rounded-circle"><Icon Name="IconName.Edit" /> </button>


            </div>
            <div style="float:left; width:15%">

            <button @onclick="vm.NewProject" class="btn btn-light rounded-circle"><Icon Name="IconName.Add" /> </button>


            </div>
            <div style="float:left; width:15%">

            <button @onclick="vm.DeleteProject" class="btn btn-light rounded-circle"><Icon Name="IconName.Delete" /> </button>


            </div>*@

        </div>

        @* <div class="col-lg-3 col-md-2 col-sm-12">
        <div style="float:left; width:70%">
        <select @onchange="vm.EventSelectDocument" class="form-select" style="border:none;">
        @foreach (var item in vm.Ui.SelectedProject.Documents)
        {
        if (item == vm.Ui.SelectedDocument)
        {
        if (item.Name == "")
        {
        <option value="@item.Id" selected="selected">Title (@item.Order)</option>
        }
        else
        {

        <option value="@item.Id" selected="selected">@item.Name</option>
        }
        }
        else
        {
        if (item.Name == "")
        {
        <option value="@item.Id">Title (@item.Order)</option>
        }
        else
        {

        <option value="@item.Id">@item.Name</option>
        }
        }
        }

        </select>
        </div>

        <div style="float:left; width:15%">

        <button @onclick="vm.NewDocument" class="btn btn-light rounded-circle"><Icon Name="IconName.Add" /> </button>

        </div>
        <div style="float:left; width:15%">

        <button @onclick="vm.DeleteDocument" class="btn btn-light rounded-circle"><Icon Name="IconName.Delete" /> </button>


        </div>
        </div>*@
    </div>
    <div class="projectName">
        <button @onclick="vm.DisplayMenu" style="border:none; background:transparent; opacity: 0.5;"><Icon Name="IconName.Bars" IconSize="IconSize.Large" /> </button>
        <span sytle="font-size: 18px;">@vm.Ui.SelectedProject.Name</span>
        <i class='bx bx-menu'></i>
    </div>
    <div class="row Hola">
        <div class="Menu col-2">
            @if (vm.Ui.DisplayMenu == true)
            {
                @*        <div class="Menu col-2">*@
                @*Clase para el menu de la izquierda*@
                <div class="sidebar close">
                    <ul class="nav-links">
                        <li>
                            <i class='bx bx-grid-alt'></i>
                            @if (@vm.Ui.EditProjectName == false)
                            {
                                <select @onchange="vm.EventSelectProject" class="form-select " style="border:none; background: #D9D9D9; font-weight: 700;">
                                    @foreach (var item in vm.App.Data.Projects)
                                    {
                                        if (item == vm.Ui.SelectedProject)
                                        {
                                            if (item.Name == "")
                                            {
                                                <option value="@item.Id" selected="selected">Project (@item.Id)</option>
                                            }
                                            else
                                            {

                                                <option value="@item.Id" selected="selected">@item.Name</option>
                                            }
                                        }
                                        else
                                        {
                                            if (item.Name == "")
                                            {
                                                <option value="@item.Id">Project (@item.Id)</option>
                                            }
                                            else
                                            {

                                                <option value="@item.Id">@item.Name</option>
                                            }
                                        }
                                    }
                                </select>
                                @if (vm.Ui.SelectedProject.ParentProjectId == null)
                                {
                                    <div class="badge bg-secondary">Root project</div>
                                }
                                else
                                {
                                    <div class="badge bg-secondary">@vm.Ui.SelectedProject.ParentProjectId</div>

                                }
                            }
                            else
                            {
                                <input Id="ProjectName" @bind="@vm.Ui.SelectedProject.Name" @onblur="vm.UnBlockRTAFocus" @onkeydown="@vm.Enter" @bind:event="oninput" class="form-control-plaintext small" style=" font-size:24px; " placeholder="Project Name" autofocus @onclick="vm.BlockRTAFocus" />

                            }

                            <ul class="sub-menu blank">
                                <li><a class="link_name" href="#">Category</a></li>
                            </ul>
                        </li>
                        <li>
                            <div class="iocn-link">
                                <a href="#">
                                    <span class="link_name">Category</span>
                                </a>
                                <i class='bx bxs-chevron-down arrow'></i>
                            </div>
                            <ul class="sub-menu">
                                <li><a class="link_name" href="#">Category</a></li>
                                <li><a href="#">HTML & CSS</a></li>
                                <li><a href="#">JavaScript</a></li>
                                <li><a href="#">PHP & MySQL</a></li>
                            </ul>
                        </li>

                    </ul>
                </div>

            }
        </div>
        <div class="Elements col-10">
            @*Clase para los elements de la derecha*@
            <div class="row mt-4">
                <div class="col-1">
                </div>
                <div class="col-10">

                    <input @bind="@vm.Ui.SelectedDocument.Name" @bind:event="oninput" id="PageName" autofocus="true" @onblur="vm.UnBlockRTAFocus" @onclick="vm.BlockRTAFocus" class="form-control-plaintext small" style="color: #342e37; font-size:50px; " placeholder="Write your title here" />
                    <div style="position:relative;">
                        @if (vm.Ui.SelectedDocument.ParentDocumentId == null)
                        {
                            <div class="badge bg-success float-start" style="float:left; width:10%">Root Document</div>
                        }
                        else
                        {
                            <div class="badge bg-success" style="float:left; width:25%">@vm.Ui.SelectedDocument.ParentDocumentId</div>
                        }
                    </div>
                    <div class="clearfix"></div>

                </div>
            </div>

            <div class="row">
                @foreach (var item in vm.Ui.SelectedDocument.Elements.OrderBy(w => w.Order))
                {
                    <div class="col-1 d-flex justify-content-center" >
                        <button class="btn btn-light btn-sm" style="border:none; background:transparent; opacity: 0.5;"><Icon Name="IconName.Lightbulb" /></button>
                        <button @onclick="()=>vm.MoveUp(item)" class="btn btn-light btn-sm" style="border:none; background:transparent; opacity: 0.5;"><Icon Name="IconName.ArrowUp" /></button>
                        <button @onclick="()=>vm.MoveDown(item)" class="btn btn-light btn-sm" style="border:none; background:transparent; opacity: 0.5;"><Icon Name="IconName.ArrowDown" /></button>
                        <button @onclick="()=>vm.DeleteElement(item)" class="btn btn-light btn-sm" style="border:none; background:transparent; opacity: 0.5;"><Icon Name="IconName.Delete" /></button>
                    </div>
                    <div class="col-11">

                        <rMakev2.Components.TextAreaComponent @bind-BindingValue=@item.Content OrderId=@item.Order />
                        <span class="badge bg-primary small">
                            Hash: @item.Hash
                        </span>
                    </div>


                }
                <div class="col-1">
                </div>
                <div class="col-6 d-flex align-content-center">
                    <button @onclick="vm.NewElement" class="btn btn-light btn-sm m-3" style="opacity: 0.5; border-radius: 50%;"><Icon Name="IconName.Add" IconSize="IconSize.x2" /></button>
                </div>
            </div>
        </div>
    </div>


    @*<div class="row">
    <div class="col-12">
    <textarea style="background-color:black; color:lawngreen; width:500px; height:900px;">
    @vm.Ui.Json
    </textarea>
    </div>

    </div>*@

</div>

@*<div class=" fixed-bottom mb-1">
    <div class=" container">
        <div class=" row">
            <div class=" col-12">
                <button @onclick=" vm.ShowSaveModal" class="btn btn-success"><Icon Name="IconName.Lightbulb" /> Save</button>
                <button @onclick=" vm.ShowPublishModal" class="btn btn-success"><Icon Name="IconName.Lightbulb" /> Publish</button>
                <button @onclick=" vm.ForkProject" class="btn btn-success"><Icon Name="IconName.Archive" /> Fork Project</button>
                <button @onclick=" vm.CloneDocument" class="btn btn-success"><Icon Name="IconName.Archive" /> Clone document</button>



            </div>
        </div>
    </div>
</div>*@



<Modal @ref="vm.App.Ui.SaveModal" class="half-modal fade">
    <ModalContent Centered="true">
        <ModalBody>
            <div class="close-button" @onclick="vm.HideSaveModal">
                <Icon Name="IconName.Times"></Icon>
            </div>
            <div class="h-100 p-4">
                <div class="w-100 h-50">
                    <h2>Choose your server</h2>
                    <p>Save your token to retrive your content</p>
                    <h3> @vm.App.Data.Id</h3>
                    <div class="form-check p-3">
                        <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault">
                        <label class="form-check-label" for="flexCheckDefault">
                            rMake@Rebel-server
                        </label>
                    </div>


                    <button @onclick=" vm.SaveContentAsync" class="btn btn-success"><Icon Name="IconName.Lightbulb" /> Save</button>

                </div>
            </div>
        </ModalBody>
    </ModalContent>
</Modal>

<Modal @ref="vm.App.Ui.PublishModal" class="half-modal fade">
    <ModalContent Centered="true">
        <ModalBody>
            <div class="close-button" @onclick="vm.HideSaveModal">
                <Icon Name="IconName.Times"></Icon>
            </div>
            <div class="h-100 p-4">
                <div class="w-100 h-50">
                    <h2>Where do you want to publish your content</h2>
                    <p>rMake is a decentralized solution for creators.</p>
                    <div class="form-check p-3">
                        <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault" checked>
                        <label class="form-check-label" for="flexCheckDefault">
                            www.xipegroup.com
                        </label>
                    </div>
                    <div class="form-check p-3">
                        <input class="form-check-input" type="checkbox" value="" id="flexCheckChecked">
                        <label class="form-check-label" for="flexCheckChecked">
                            www.radicalcompanies.org
                        </label>
                    </div>
                    <div class="form-check p-3">
                        <input class="form-check-input" type="checkbox" value="" id="flexCheckChecked">
                        <label class="form-check-label" for="flexCheckChecked">
                            www.radicalpurpose.org
                        </label>
                    </div>
                    <div class="form-check p-3">
                        <input class="form-check-input" type="checkbox" value="" id="flexCheckChecked">
                        <label class="form-check-label" for="flexCheckChecked">
                            www.anotherwebsite.org
                        </label>
                    </div>
                    <button @onclick=" vm.SaveContentAsync" class="btn btn-success"><Icon Name="IconName.Lightbulb" /> Save</button>

                </div>
            </div>
        </ModalBody>
    </ModalContent>
</Modal>

<Modal @ref="vm.App.Ui.MergeModal" class="half-modal fade">
    <ModalContent Centered="true">
        <ModalBody>
            <div class="close-button" @onclick="vm.HideSaveModal">
                <Icon Name="IconName.Times"></Icon>
            </div>
            <div class="h-100 p-4">
                <div class="w-100 h-50">
                    <h2>Choose Documents to Merge</h2>
                    <p>How it works...</p>


                </div>
            </div>
        </ModalBody>
    </ModalContent>
</Modal>

@code
{

    [Parameter]
    public string token { get; set; }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (token != "")
                await vm.LoadProyectAsync(token);
        }
        catch
        {

        }


    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        if (vm.Ui.EditProjectName == true && vm.Ui.EditedProjectName == false)
        {
            await jsRuntime.InvokeVoidAsync("focusInput");
            vm.Ui.EditedProjectName = true;
        }


    }

    public async Task Focus()
    {
        vm.SwitchProjectName();

    }
}
