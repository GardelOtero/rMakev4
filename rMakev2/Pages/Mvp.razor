@page "/Mvp"
@page "/Mvp/{token}"
@using rMakev2.ViewModel;
@inject RmakeViewModel vm;
@inject IJSRuntime jsRuntime;
@using MudBlazor;
<PageTitle>rHacker</PageTitle>

<style>
    .topBar {
        position: fixed;
        top: 0;
        width: 100%;
        background: rgba(255,255,255,0.5);
        backdrop-filter: blur(5px);
        padding-right: 15px;
        z-index: 3;
        border-bottom: 1px solid #f3f3f3;
        min-height: 50px;
    }

    .logo {
        font-size: 30px;
        margin: 0;
        font-weight: 700;
    }

    .subLogo {
        font-size: 9px;
        text-align: left;
        margin: 0px;
    }

    .barItems {
        float: right;
        width: 30px;
        margin: 10px;
        padding: 5px;
    }

    .projectName {
        min-width: 100px;
        padding-top: 15px !important;
        padding-right: 25px;
        margin-right: 15px;
        border-right: 1px solid #f1f1f1;
    }

    .brandArea {
        float: left;
        width: 80px;
        text-align: left;
        height: 0px;
    }

    .itemsArea {
        float: left;
        text-align: left;
        height: 50px;
        margin-left: 5px;
    }

    .leftArea {
        position: absolute;
        right: 0px;
        margin-right: 50px;
    }

    .book-explorer {
        position: fixed;
        top: 100px;
        left: 0px;
        z-index: 99;
        padding: 3px;
        background-color: #fff;
    }

    .bb-white {
        border-bottom: white;
    }

    .bt-white {
        border-top: white;
    }

    .min-maxH-400 {
        min-height: 400px;
        max-height: 400px;
        overflow: auto;
    }

    .menuDocumentTitle {
        margin-left: 20px;
        font-size: 13px;
        text-overflow: ellipsis;
        max-width: 165px;
        white-space: nowrap;
        cursor: pointer;
        overflow: hidden;
    }

    .btn-Outline {
        background: none;
        color: #000;
    }

    .smallIcon {
        width: 12px;
        height: 12px;
    }

    .mdicon {
        width: 16px;
        height: 16px;
        color: #666;
        opacity: .3;
    }

    .input-project-name {
        font-size: 16px;
        padding-top: 15px !important;
        padding-left: 10px;
        font-weight: 500;
        text-overflow: ellipsis;
    }

    .documentMenu {
        border-radius: 5px;
        border: 1px solid #777;
        padding: 5px;
        padding-left: 15px;
        width: 100px;
    }

    .document-name {
        width: 100%;
        border-radius: 0;
        position: relative;
        transition: all 0.2s ease;
        margin-bottom: 2px;
        text-overflow: ellipsis;
        max-width: 178px !important;
        overflow: hidden;
        white-space: nowrap;
        cursor: pointer;
    }

    p {
        margin-bottom: 2px;
    }

    .document-name:hover {
        background-color: rgba(0, 0, 0, 0.09);
        background-clip: content-box;
        border-radius: 2px;
    }

    /*    .b {
            opacity: 0;
            transition: all 0.2s ease;
        }

        .a:hover + .b {
            opacity: 1;
        }*/

    .spacer {
        width: 10px;
        height: 34px;
    }

</style>
<div class="container-fluid">
    <header>
        <nav class="navbar navbar-expand-lg navbar-light  topBar">
            <a class="navbar-brand" href="#">
                <div class="logo">rMake!</div>
                <div class="subLogo"> Hacker Mode </div>
            </a>
            <div class="leftArea">
                <ul class="navbar-nav mr-auto">
                    <li class="spacer">
                    </li>
                    <li class="nav-item active projectName">
                        <span>@vm.Ui.SelectedProject.Name</span>
                    </li>
                    <li>
                        <a class="barItems" @onclick="() => vm.DeleteProjectMenu(vm.Ui.SelectedProject)"><img src="svgs/Delete.svg" title="Delete Project" /></a>
                    </li>
                    <li class="nav-item">
                        <a class="barItems" @onclick="vm.ForkProject"><img src="svgs/Fork.svg" title="Fork Project" /> </a>
                    </li>
                    <li class="nav-item">
                        <a class="barItems" @onclick="vm.ForkProject"><img src="svgs/Merge.svg" title="Merge Projects" /> </a>
                    </li>
                    <li class="nav-item">
                        <a class="barItems" @onclick="vm.ForkProject"><img src="svgs/Code.svg" title="Json View" /> </a>
                    </li>
                    <li class="nav-item">
                        <a class="barItems" @onclick=" vm.ShowSaveModal"><img src="svgs/asset 1.svg" title="Save Project" /> </a>
                    </li>
                    <li class="nav-item">
                        <a class="barItems" @onclick=" vm.ShowPublishModal"><img src="svgs/asset 3.svg" title="Publish" /> </a>
                    </li>
                </ul>
            </div>
        </nav>
    </header>

    <section>
        @*menu*@
        <div class="row mt-5">
            <div class="col-sm-12 col-md-3 col-lg-3 col-xl-2 mt-5 p-5 pl-0 ml-0">
                <b @onclick="vm.DisplayMenu" class="small mt-4 m-2"><Icon Name="IconName.Bars" IconSize="IconSize.Large" /></b>
                @if (vm.Ui.DisplayMenu == true)
                {
                    <div class="card mt-3">
                        <div class="card-header bg-white bb-white"></div>
                        <div class="card-body min-maxH-400 ">
                            @foreach (var project in vm.App.Data.Projects)
                            {
                                <div>
                                    <input Id="ProjectName"
                                   @bind="project.Name"
                                   @onblur="vm.UnBlockRTAFocus"
                                   @onkeydown="@vm.Enter"
                                   @bind:event="oninput"
                                   class="form-control-plaintext small input-project-name"
                                   placeholder="Project Name" autofocus @onclick="vm.BlockRTAFocus" />
                                </div>
                                @foreach (var document in project.Documents)
                                {
                                    <div class="col-12 document-name">
                                        @if (document.Name == "")
                                        {
                                            <p @onclick="@(() => vm.EventSelectDocumentMenu(document))" class="menuDocumentTitle">Untitled</p>
                                        }
                                        else
                                        {
                                            <p class="menuDocumentTitle" @onclick="@(() => vm.EventSelectDocumentMenu(document))">@document.Name</p>
                                        }
                                    </div>
                                }

                                <div class=" mt-4">
                                    <button @onclick="() => vm.NewDocumentMenu(project)" class="small">  <img src="svgs/Plus.svg" title="New Document" class="mr-2 smallIcon" />New Document </button>
                                    <hr />
                                </div>
                            }
                        </div>
                        <div class="card-footer bg-white bt-white text-center pb-3">
                            <button @onclick="vm.NewProject" class="btn btn-dark btn-Outline btn-sm" style="font-size:13px;">New Project</button>
                        </div>
                    </div>
                }
            </div>
            @*/menu*@
            @*working area*@
            <div class="col-sm-12 col-md-2 col-lg-2 col-xl-1 mt-5 p-5 ">
            </div>
            <div class="col-sm-12 col-md-7 col-lg-7 col-xl-8 mt-5 p-5 ">

                @if (vm.Ui.DisplayDocumentMenu == true)
                {
                    <div class="spacer">

                        <div class="documentMenu mb-2">
                            <a @onclick="vm.DeleteDocument"><img src="svgs/Delete.svg" title="Delete Document" class="m-1 smallIcon" /></a>
                            <a @onclick="vm.CloneDocument"><img src="svgs/Clone.svg" title="Clone Document" class="m-1 smallIcon" /></a>
                            <a><img src="svgs/Merge.svg" title="Merge Documents comming soon" class="m-1 smallIcon" /></a>
                        </div>
                    </div>
                }
                else
                {
                    <div class="spacer"></div>

                }

                <div style="width:20px; float:left; margin-top:15px;">
                    <img style="padding: 5px;" src="svgs/3 dots.svg" title="New Document" class=" " @onclick="vm.DocumentMenu" />
                </div>
                <div style="width:90%; float:left;">

                    <input @bind="@vm.Ui.SelectedDocument.Name"
                           @bind:event="oninput" id="PageName" autofocus="true"
                           @onblur="vm.UnBlockRTAFocus"
                           @onclick="vm.BlockRTAFocus"
                           class="form-control-plaintext small"
                           style="color: #342e37; font-size:30px; padding-left: 15px; text-overflow: ellipsis;"
                           placeholder="Write your title here" />
                </div>
                <div class="clearfix"></div>
                <div class="mt-4">
                    @foreach (var item in vm.Ui.SelectedDocument.Elements.OrderBy(w => w.Order))
                    {
                        <div class="mt-4">
                            <div class="b" style="margin-left:-150px; width:auto;  display:flex; float:left; padding-top: 10px">
                                <a @onclick="()=>vm.DeleteElement(item)"><img src="svgs/Delete.svg" title="Delete" class="m-1 mdicon" /></a>
                                <a @onclick="()=>vm.MoveDown(item)"><img src="svgs/Arrow down.svg" title="Move Down" class="m-1 mdicon" /></a>
                                <a @onclick="()=>vm.MoveUp(item)"><img src="svgs/Arrow up.svg" title="Move Up" class="m-1 mdicon" /></a>
                                <a><img src="svgs/Idea.svg" title="Comming soon" class="mr-2 mdicon" /></a>
                            </div>
                            <div class="a">
                                <div style="float:left; width:90%">
                                    <rMakev2.Components.TextAreaComponent @bind-BindingValue=@item.Content OrderId=@item.Order />
                                </div>
                                <div class="clearfix"></div>
                            </div>

                        </div>
                    }
                </div>
            </div>

        </div>


        @*/working area*@


    </section>
</div>

<Modal @ref="vm.App.Ui.SaveModal" class="half-modal fade">
    <ModalContent Centered="true">
        <ModalBody>
            <div class="close-button" @onclick="vm.HideSaveModal">
                <Icon Name="IconName.Times"></Icon>
            </div>
            <div class="h-100 p-4">
                <div class="w-100 h-50">
                    <h2>Choose your server</h2>
                    <p>Save your token to retrive your content</p>
                    <h5> @vm.App.Data.Id</h5>
                    <div class="form-check p-3">
                        <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault">
                        <label class="form-check-label" for="flexCheckDefault">
                            rMake@Rebel-server
                        </label>
                    </div>


                    <button @onclick=" vm.SaveContentAsync" class="btn btn-success"><Icon Name="IconName.Lightbulb" /> Save</button>

                </div>
            </div>
        </ModalBody>
    </ModalContent>
</Modal>

<Modal @ref="vm.App.Ui.PublishModal" class="half-modal fade">
    <ModalContent Centered="true">
        <ModalBody>
            <div class="close-button" @onclick="vm.HidePublishModal">
                <Icon Name="IconName.Times"></Icon>
            </div>
            <div class="h-100 p-4">
                <div class="w-100 h-50">
                    <h2>Where do you want to publish your content</h2>
                    <p>rMake is a decentralized solution for creators.</p>
                    <div class="form-check p-3">
                        <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault" checked>
                        <label class="form-check-label" for="flexCheckDefault">
                            www.xipegroup.com
                        </label>
                    </div>
                    <div class="form-check p-3">
                        <input class="form-check-input" type="checkbox" value="" id="flexCheckChecked">
                        <label class="form-check-label" for="flexCheckChecked">
                            www.radicalcompanies.org
                        </label>
                    </div>
                    <div class="form-check p-3">
                        <input class="form-check-input" type="checkbox" value="" id="flexCheckChecked">
                        <label class="form-check-label" for="flexCheckChecked">
                            www.radicalpurpose.org
                        </label>
                    </div>
                    <div class="form-check p-3">
                        <input class="form-check-input" type="checkbox" value="" id="flexCheckChecked">
                        <label class="form-check-label" for="flexCheckChecked">
                            www.anotherwebsite.org
                        </label>
                    </div>
                    <button @onclick=" vm.SaveContentAsync" class="btn btn-success"><Icon Name="IconName.Lightbulb" /> Save</button>

                </div>
            </div>
        </ModalBody>
    </ModalContent>
</Modal>

<Modal @ref="vm.App.Ui.MergeModal" class="half-modal fade">
    <ModalContent Centered="true">
        <ModalBody>
            <div class="close-button" @onclick="vm.HideSaveModal">
                <Icon Name="IconName.Times"></Icon>
            </div>
            <div class="h-100 p-4">
                <div class="w-100 h-50">
                    <h2>Choose Documents to Merge</h2>
                    <p>How it works...</p>


                </div>
            </div>
        </ModalBody>
    </ModalContent>
</Modal>

@code {
    bool _isExpanded = true;
    MudListItem selectedItem;
    object selectedValue = 1;

    [Parameter]
    public string token { get; set; }


    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (token != "")
                await vm.LoadProyectAsync(token);


        }
        catch
        {

        }







    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {

        if (vm.Ui.EditProjectName == true && vm.Ui.EditedProjectName == false)
        {
            await jsRuntime.InvokeVoidAsync("focusInput");
            vm.Ui.EditedProjectName = true;
        }
        else if (vm.Ui.EditProjectName == false && vm.Ui.EditedProjectName == true)
        {
            vm.Ui.EditedProjectName = false;
        }

    }

    public async Task Focus()
    {
        vm.SwitchProjectName();

    }

}
